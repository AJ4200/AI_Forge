#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AI_Forge_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AI_Forge_Database")]
	public partial class AI_Forge_DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProduct_Type(Product_Type instance);
    partial void UpdateProduct_Type(Product_Type instance);
    partial void DeleteProduct_Type(Product_Type instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertInvoice_Line(Invoice_Line instance);
    partial void UpdateInvoice_Line(Invoice_Line instance);
    partial void DeleteInvoice_Line(Invoice_Line instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    #endregion
		
		public AI_Forge_DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AI_Forge_DatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AI_Forge_DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AI_Forge_DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AI_Forge_DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AI_Forge_DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Product_Type> Product_Types
		{
			get
			{
				return this.GetTable<Product_Type>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_Line> Invoice_Lines
		{
			get
			{
				return this.GetTable<Invoice_Line>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Type")]
	public partial class Product_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductT_Id;
		
		private string _ProductT_Name;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductT_IdChanging(int value);
    partial void OnProductT_IdChanged();
    partial void OnProductT_NameChanging(string value);
    partial void OnProductT_NameChanged();
    #endregion
		
		public Product_Type()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductT_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductT_Id
		{
			get
			{
				return this._ProductT_Id;
			}
			set
			{
				if ((this._ProductT_Id != value))
				{
					this.OnProductT_IdChanging(value);
					this.SendPropertyChanging();
					this._ProductT_Id = value;
					this.SendPropertyChanged("ProductT_Id");
					this.OnProductT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductT_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductT_Name
		{
			get
			{
				return this._ProductT_Name;
			}
			set
			{
				if ((this._ProductT_Name != value))
				{
					this.OnProductT_NameChanging(value);
					this.SendPropertyChanging();
					this._ProductT_Name = value;
					this.SendPropertyChanged("ProductT_Name");
					this.OnProductT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Type_Product", Storage="_Products", ThisKey="ProductT_Id", OtherKey="ProductT_ID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Type_User", Storage="_Users", ThisKey="ProductT_Id", OtherKey="ProductT_ID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Product_Type = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Product_Type = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Product_Type = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Product_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_Id;
		
		private int _ProductT_ID;
		
		private string _Product_Name;
		
		private decimal _Product_Price;
		
		private string _Product_Description;
		
		private string _Product_Dimensions;
		
		private string _Product_Category;
		
		private int _Product_Quantity;
		
		private System.Nullable<int> _Product_Sale;
		
		private System.Nullable<decimal> _Product_SalePrice;
		
		private string _Product_SaleDescription;
		
		private System.Nullable<int> _Product_Deleted;
		
		private EntitySet<Invoice_Line> _Invoice_Lines;
		
		private EntityRef<Product_Type> _Product_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnProductT_IDChanging(int value);
    partial void OnProductT_IDChanged();
    partial void OnProduct_NameChanging(string value);
    partial void OnProduct_NameChanged();
    partial void OnProduct_PriceChanging(decimal value);
    partial void OnProduct_PriceChanged();
    partial void OnProduct_DescriptionChanging(string value);
    partial void OnProduct_DescriptionChanged();
    partial void OnProduct_DimensionsChanging(string value);
    partial void OnProduct_DimensionsChanged();
    partial void OnProduct_CategoryChanging(string value);
    partial void OnProduct_CategoryChanged();
    partial void OnProduct_QuantityChanging(int value);
    partial void OnProduct_QuantityChanged();
    partial void OnProduct_SaleChanging(System.Nullable<int> value);
    partial void OnProduct_SaleChanged();
    partial void OnProduct_SalePriceChanging(System.Nullable<decimal> value);
    partial void OnProduct_SalePriceChanged();
    partial void OnProduct_SaleDescriptionChanging(string value);
    partial void OnProduct_SaleDescriptionChanged();
    partial void OnProduct_DeletedChanging(System.Nullable<int> value);
    partial void OnProduct_DeletedChanged();
    #endregion
		
		public Product()
		{
			this._Invoice_Lines = new EntitySet<Invoice_Line>(new Action<Invoice_Line>(this.attach_Invoice_Lines), new Action<Invoice_Line>(this.detach_Invoice_Lines));
			this._Product_Type = default(EntityRef<Product_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductT_ID", DbType="Int NOT NULL")]
		public int ProductT_ID
		{
			get
			{
				return this._ProductT_ID;
			}
			set
			{
				if ((this._ProductT_ID != value))
				{
					if (this._Product_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductT_IDChanging(value);
					this.SendPropertyChanging();
					this._ProductT_ID = value;
					this.SendPropertyChanged("ProductT_ID");
					this.OnProductT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Product_Name
		{
			get
			{
				return this._Product_Name;
			}
			set
			{
				if ((this._Product_Name != value))
				{
					this.OnProduct_NameChanging(value);
					this.SendPropertyChanging();
					this._Product_Name = value;
					this.SendPropertyChanged("Product_Name");
					this.OnProduct_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Price", DbType="Money NOT NULL")]
		public decimal Product_Price
		{
			get
			{
				return this._Product_Price;
			}
			set
			{
				if ((this._Product_Price != value))
				{
					this.OnProduct_PriceChanging(value);
					this.SendPropertyChanging();
					this._Product_Price = value;
					this.SendPropertyChanged("Product_Price");
					this.OnProduct_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Description", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Product_Description
		{
			get
			{
				return this._Product_Description;
			}
			set
			{
				if ((this._Product_Description != value))
				{
					this.OnProduct_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Product_Description = value;
					this.SendPropertyChanged("Product_Description");
					this.OnProduct_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Dimensions", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Product_Dimensions
		{
			get
			{
				return this._Product_Dimensions;
			}
			set
			{
				if ((this._Product_Dimensions != value))
				{
					this.OnProduct_DimensionsChanging(value);
					this.SendPropertyChanging();
					this._Product_Dimensions = value;
					this.SendPropertyChanged("Product_Dimensions");
					this.OnProduct_DimensionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Category", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Product_Category
		{
			get
			{
				return this._Product_Category;
			}
			set
			{
				if ((this._Product_Category != value))
				{
					this.OnProduct_CategoryChanging(value);
					this.SendPropertyChanging();
					this._Product_Category = value;
					this.SendPropertyChanged("Product_Category");
					this.OnProduct_CategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Quantity", DbType="Int NOT NULL")]
		public int Product_Quantity
		{
			get
			{
				return this._Product_Quantity;
			}
			set
			{
				if ((this._Product_Quantity != value))
				{
					this.OnProduct_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Product_Quantity = value;
					this.SendPropertyChanged("Product_Quantity");
					this.OnProduct_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Sale", DbType="Int")]
		public System.Nullable<int> Product_Sale
		{
			get
			{
				return this._Product_Sale;
			}
			set
			{
				if ((this._Product_Sale != value))
				{
					this.OnProduct_SaleChanging(value);
					this.SendPropertyChanging();
					this._Product_Sale = value;
					this.SendPropertyChanged("Product_Sale");
					this.OnProduct_SaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_SalePrice", DbType="Money")]
		public System.Nullable<decimal> Product_SalePrice
		{
			get
			{
				return this._Product_SalePrice;
			}
			set
			{
				if ((this._Product_SalePrice != value))
				{
					this.OnProduct_SalePriceChanging(value);
					this.SendPropertyChanging();
					this._Product_SalePrice = value;
					this.SendPropertyChanged("Product_SalePrice");
					this.OnProduct_SalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_SaleDescription", DbType="VarChar(150)")]
		public string Product_SaleDescription
		{
			get
			{
				return this._Product_SaleDescription;
			}
			set
			{
				if ((this._Product_SaleDescription != value))
				{
					this.OnProduct_SaleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Product_SaleDescription = value;
					this.SendPropertyChanged("Product_SaleDescription");
					this.OnProduct_SaleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Deleted", DbType="Int")]
		public System.Nullable<int> Product_Deleted
		{
			get
			{
				return this._Product_Deleted;
			}
			set
			{
				if ((this._Product_Deleted != value))
				{
					this.OnProduct_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Product_Deleted = value;
					this.SendPropertyChanged("Product_Deleted");
					this.OnProduct_DeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Invoice_Line", Storage="_Invoice_Lines", ThisKey="Product_Id", OtherKey="Product_Id")]
		public EntitySet<Invoice_Line> Invoice_Lines
		{
			get
			{
				return this._Invoice_Lines;
			}
			set
			{
				this._Invoice_Lines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Type_Product", Storage="_Product_Type", ThisKey="ProductT_ID", OtherKey="ProductT_Id", IsForeignKey=true)]
		public Product_Type Product_Type
		{
			get
			{
				return this._Product_Type.Entity;
			}
			set
			{
				Product_Type previousValue = this._Product_Type.Entity;
				if (((previousValue != value) 
							|| (this._Product_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_Type.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Product_Type.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductT_ID = value.ProductT_Id;
					}
					else
					{
						this._ProductT_ID = default(int);
					}
					this.SendPropertyChanged("Product_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_Lines(Invoice_Line entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Invoice_Lines(Invoice_Line entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_Line")]
	public partial class Invoice_Line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceL_Id;
		
		private int _InvoiceL_Quantity;
		
		private decimal _InvoiceL_Price;
		
		private decimal _InvoiceL_Tax;
		
		private int _Product_Id;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceL_IdChanging(int value);
    partial void OnInvoiceL_IdChanged();
    partial void OnInvoiceL_QuantityChanging(int value);
    partial void OnInvoiceL_QuantityChanged();
    partial void OnInvoiceL_PriceChanging(decimal value);
    partial void OnInvoiceL_PriceChanged();
    partial void OnInvoiceL_TaxChanging(decimal value);
    partial void OnInvoiceL_TaxChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    #endregion
		
		public Invoice_Line()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceL_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceL_Id
		{
			get
			{
				return this._InvoiceL_Id;
			}
			set
			{
				if ((this._InvoiceL_Id != value))
				{
					this.OnInvoiceL_IdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceL_Id = value;
					this.SendPropertyChanged("InvoiceL_Id");
					this.OnInvoiceL_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceL_Quantity", DbType="Int NOT NULL")]
		public int InvoiceL_Quantity
		{
			get
			{
				return this._InvoiceL_Quantity;
			}
			set
			{
				if ((this._InvoiceL_Quantity != value))
				{
					this.OnInvoiceL_QuantityChanging(value);
					this.SendPropertyChanging();
					this._InvoiceL_Quantity = value;
					this.SendPropertyChanged("InvoiceL_Quantity");
					this.OnInvoiceL_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceL_Price", DbType="Money NOT NULL")]
		public decimal InvoiceL_Price
		{
			get
			{
				return this._InvoiceL_Price;
			}
			set
			{
				if ((this._InvoiceL_Price != value))
				{
					this.OnInvoiceL_PriceChanging(value);
					this.SendPropertyChanging();
					this._InvoiceL_Price = value;
					this.SendPropertyChanged("InvoiceL_Price");
					this.OnInvoiceL_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceL_Tax", DbType="Money NOT NULL")]
		public decimal InvoiceL_Tax
		{
			get
			{
				return this._InvoiceL_Tax;
			}
			set
			{
				if ((this._InvoiceL_Tax != value))
				{
					this.OnInvoiceL_TaxChanging(value);
					this.SendPropertyChanging();
					this._InvoiceL_Tax = value;
					this.SendPropertyChanged("InvoiceL_Tax");
					this.OnInvoiceL_TaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL")]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Line_Invoice", Storage="_Invoices", ThisKey="InvoiceL_Id", OtherKey="InvoiceL_Id")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Invoice_Line", Storage="_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Invoice_Lines.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Invoice_Lines.Add(this);
						this._Product_Id = value.Product_Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Invoice_Line = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Invoice_Line = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _User_Name;
		
		private string _User_Surname;
		
		private string _User_Email;
		
		private decimal _User_Contact;
		
		private string _User_Gender;
		
		private System.Nullable<System.DateTime> _User_DOB;
		
		private string _User_Address;
		
		private string _User_UserName;
		
		private string _User_Password;
		
		private int _ProductT_ID;
		
		private int _User_Active;
		
		private string _User_Type;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<Product_Type> _Product_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnUser_SurnameChanging(string value);
    partial void OnUser_SurnameChanged();
    partial void OnUser_EmailChanging(string value);
    partial void OnUser_EmailChanged();
    partial void OnUser_ContactChanging(decimal value);
    partial void OnUser_ContactChanged();
    partial void OnUser_GenderChanging(string value);
    partial void OnUser_GenderChanged();
    partial void OnUser_DOBChanging(System.Nullable<System.DateTime> value);
    partial void OnUser_DOBChanged();
    partial void OnUser_AddressChanging(string value);
    partial void OnUser_AddressChanged();
    partial void OnUser_UserNameChanging(string value);
    partial void OnUser_UserNameChanged();
    partial void OnUser_PasswordChanging(string value);
    partial void OnUser_PasswordChanged();
    partial void OnProductT_IDChanging(int value);
    partial void OnProductT_IDChanged();
    partial void OnUser_ActiveChanging(int value);
    partial void OnUser_ActiveChanged();
    partial void OnUser_TypeChanging(string value);
    partial void OnUser_TypeChanged();
    #endregion
		
		public User()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Product_Type = default(EntityRef<Product_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Surname
		{
			get
			{
				return this._User_Surname;
			}
			set
			{
				if ((this._User_Surname != value))
				{
					this.OnUser_SurnameChanging(value);
					this.SendPropertyChanging();
					this._User_Surname = value;
					this.SendPropertyChanged("User_Surname");
					this.OnUser_SurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Email
		{
			get
			{
				return this._User_Email;
			}
			set
			{
				if ((this._User_Email != value))
				{
					this.OnUser_EmailChanging(value);
					this.SendPropertyChanging();
					this._User_Email = value;
					this.SendPropertyChanged("User_Email");
					this.OnUser_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Contact", DbType="Decimal(18,0) NOT NULL")]
		public decimal User_Contact
		{
			get
			{
				return this._User_Contact;
			}
			set
			{
				if ((this._User_Contact != value))
				{
					this.OnUser_ContactChanging(value);
					this.SendPropertyChanging();
					this._User_Contact = value;
					this.SendPropertyChanged("User_Contact");
					this.OnUser_ContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Gender", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string User_Gender
		{
			get
			{
				return this._User_Gender;
			}
			set
			{
				if ((this._User_Gender != value))
				{
					this.OnUser_GenderChanging(value);
					this.SendPropertyChanging();
					this._User_Gender = value;
					this.SendPropertyChanged("User_Gender");
					this.OnUser_GenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> User_DOB
		{
			get
			{
				return this._User_DOB;
			}
			set
			{
				if ((this._User_DOB != value))
				{
					this.OnUser_DOBChanging(value);
					this.SendPropertyChanging();
					this._User_DOB = value;
					this.SendPropertyChanged("User_DOB");
					this.OnUser_DOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Address
		{
			get
			{
				return this._User_Address;
			}
			set
			{
				if ((this._User_Address != value))
				{
					this.OnUser_AddressChanging(value);
					this.SendPropertyChanging();
					this._User_Address = value;
					this.SendPropertyChanged("User_Address");
					this.OnUser_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_UserName
		{
			get
			{
				return this._User_UserName;
			}
			set
			{
				if ((this._User_UserName != value))
				{
					this.OnUser_UserNameChanging(value);
					this.SendPropertyChanging();
					this._User_UserName = value;
					this.SendPropertyChanged("User_UserName");
					this.OnUser_UserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Password
		{
			get
			{
				return this._User_Password;
			}
			set
			{
				if ((this._User_Password != value))
				{
					this.OnUser_PasswordChanging(value);
					this.SendPropertyChanging();
					this._User_Password = value;
					this.SendPropertyChanged("User_Password");
					this.OnUser_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductT_ID", DbType="Int NOT NULL")]
		public int ProductT_ID
		{
			get
			{
				return this._ProductT_ID;
			}
			set
			{
				if ((this._ProductT_ID != value))
				{
					if (this._Product_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductT_IDChanging(value);
					this.SendPropertyChanging();
					this._ProductT_ID = value;
					this.SendPropertyChanged("ProductT_ID");
					this.OnProductT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Active", DbType="Int NOT NULL")]
		public int User_Active
		{
			get
			{
				return this._User_Active;
			}
			set
			{
				if ((this._User_Active != value))
				{
					this.OnUser_ActiveChanging(value);
					this.SendPropertyChanging();
					this._User_Active = value;
					this.SendPropertyChanged("User_Active");
					this.OnUser_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string User_Type
		{
			get
			{
				return this._User_Type;
			}
			set
			{
				if ((this._User_Type != value))
				{
					this.OnUser_TypeChanging(value);
					this.SendPropertyChanging();
					this._User_Type = value;
					this.SendPropertyChanged("User_Type");
					this.OnUser_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_Invoices", ThisKey="User_Id", OtherKey="User_Id")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Type_User", Storage="_Product_Type", ThisKey="ProductT_ID", OtherKey="ProductT_Id", IsForeignKey=true)]
		public Product_Type Product_Type
		{
			get
			{
				return this._Product_Type.Entity;
			}
			set
			{
				Product_Type previousValue = this._Product_Type.Entity;
				if (((previousValue != value) 
							|| (this._Product_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_Type.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Product_Type.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ProductT_ID = value.ProductT_Id;
					}
					else
					{
						this._ProductT_ID = default(int);
					}
					this.SendPropertyChanged("Product_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_Id;
		
		private int _InvoiceL_Id;
		
		private int _User_Id;
		
		private System.DateTime _Invoice_Date;
		
		private EntityRef<Invoice_Line> _Invoice_Line;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_IdChanging(int value);
    partial void OnInvoice_IdChanged();
    partial void OnInvoiceL_IdChanging(int value);
    partial void OnInvoiceL_IdChanged();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnInvoice_DateChanging(System.DateTime value);
    partial void OnInvoice_DateChanged();
    #endregion
		
		public Invoice()
		{
			this._Invoice_Line = default(EntityRef<Invoice_Line>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Invoice_Id
		{
			get
			{
				return this._Invoice_Id;
			}
			set
			{
				if ((this._Invoice_Id != value))
				{
					this.OnInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Id = value;
					this.SendPropertyChanged("Invoice_Id");
					this.OnInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceL_Id", DbType="Int NOT NULL")]
		public int InvoiceL_Id
		{
			get
			{
				return this._InvoiceL_Id;
			}
			set
			{
				if ((this._InvoiceL_Id != value))
				{
					if (this._Invoice_Line.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceL_IdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceL_Id = value;
					this.SendPropertyChanged("InvoiceL_Id");
					this.OnInvoiceL_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Date", DbType="Date NOT NULL")]
		public System.DateTime Invoice_Date
		{
			get
			{
				return this._Invoice_Date;
			}
			set
			{
				if ((this._Invoice_Date != value))
				{
					this.OnInvoice_DateChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Date = value;
					this.SendPropertyChanged("Invoice_Date");
					this.OnInvoice_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Line_Invoice", Storage="_Invoice_Line", ThisKey="InvoiceL_Id", OtherKey="InvoiceL_Id", IsForeignKey=true)]
		public Invoice_Line Invoice_Line
		{
			get
			{
				return this._Invoice_Line.Entity;
			}
			set
			{
				Invoice_Line previousValue = this._Invoice_Line.Entity;
				if (((previousValue != value) 
							|| (this._Invoice_Line.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice_Line.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Invoice_Line.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._InvoiceL_Id = value.InvoiceL_Id;
					}
					else
					{
						this._InvoiceL_Id = default(int);
					}
					this.SendPropertyChanged("Invoice_Line");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_User", ThisKey="User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._User_Id = value.User_Id;
					}
					else
					{
						this._User_Id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
